name: Deploy and Validate Metadata

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  sfdxvalidate:
    name: "Run SFDX Validate"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Salesforce CLI and sfdx-git-delta plugin
        run: |
          npm install -g @salesforce/cli@latest
          sf plugins install sfdx-git-delta@latest

      - name: 'Authentification Salesforce'
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.url
          sfdx auth:sfdxurl:store -f sfdx_auth.url -a prod -d

      - name: 'Generate metadata delta pull request'
        run: |
          mkdir -p .temp/delta
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            TARGET_REF="${{ github.base_ref }}"
          else
            TARGET_REF="main"
          fi
          sfdx sgd:source:delta --to "HEAD" --from "origin/$TARGET_REF" --output ".temp/delta" --generate-delta --source force-app

      - name: Check if package.xml exists
        id: check-delta
        run: |
          if [ -f .temp/delta/package.xml ]; then
            echo "package_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "package_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Deploy metadata to production
        if: github.ref == 'refs/heads/main' && steps.check-delta.outputs.package_exists == 'true'
        run: |
          sf deploy metadata --manifest .temp/delta/package.xml --test-level RunLocalTests --verbose

      - name: Validate metadata on pull request
        if: github.event_name == 'pull_request' && steps.check-delta.outputs.package_exists == 'true'
        run: |
          sf deploy metadata --manifest .temp/delta/package.xml --test-level RunLocalTests --dry-run --verbose

      - name: Cleanup
        if: always()
        run: rm -f sfdx_auth.url